00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/10/2017 8:30:15 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Input Branch Tutorial
00000000                             3  * Written by : Jeremy DeHaan
00000000                             4  * Date       : 04/10/2017
00000000                             5  * Description: This code will ask for you to input a number.
00000000                             6  *              It then checks if the number is between 20 and
00000000                             7  *              25 and goes to various banches accordingly.
00000000                             8  *
00000000                             9  *              If the input is equal to the SID number, it
00000000                            10  *              terminates the program.
00000000                            11  *-----------------------------------------------------------
00000000                            12  
00000000                            13  *-----Text replacements-------
00000000  =0000000D                 14  CR      EQU     $0D
00000000  =0000000A                 15  LF      EQU     $0A
00000000  =001988F2                 16  SID     EQU     1673458
00000000                            17  
00001000                            18  START   ORG     $1000   ; first instruction of program
00001000                            19  *-------Code for output-------
00001000  43F9 00001056             20  LOOP    LEA MESSAGE,A1  ; loads the address of MESSAGE into A1  
00001006  103C 000E                 21          MOVE.B  #14,D0  ; moves 14 iunto D0
0000100A  4E4F                      22          TRAP    #15     ; runs the I/O command with code #14(print text)
0000100C                            23  
0000100C                            24  *------Code for input---------
0000100C  103C 0004                 25          MOVE.B  #4,D0   ; moves 4 into D0
00001010  4E4F                      26          TRAP    #15     ; runs the I/O command with code #4(read number into D1)
00001012  B2BC 001988F2             27          CMP.L   #SID,D1  ; compare the input with the SID number
00001018  6700 0036                 28          BEQ     DONE    ; if they are equal, we go to DONE (and end the program)
0000101C                            29  
0000101C  B2BC 00000014             30          CMP.L   #20,D1  ; compare 20 with the value in D1
00001022  6D00 0010                 31          BLT     INVALID ; if this value is less than 20, go to INVALID
00001026  B2BC 00000019             32          CMP.L   #25,D1  ; compare 25 with the value in D1
0000102C  6E00 0006                 33          BGT     INVALID ; if this value is greater than 25, go to IVALID
00001030  6000 0010                 34          BRA     VALID   ; if the value in D1 is between 20 and 25, it is a valid number
00001034                            35  
00001034  43F9 000010B9             36  INVALID LEA     INV,A1  ; load the address of INV into A1 (invalid value message)
0000103A  103C 000E                 37          MOVE.B  #14,D0  ; moves 14 iunto D0 
0000103E  4E4F                      38          TRAP    #15     ; runs the I/O command with code #14(print text)
00001040  60BE                      39          BRA     LOOP    ; go to the start of the loop
00001042                            40  
00001042  43F9 00001092             41  VALID   LEA     VLD,A1  ; load the address of VLD into A1 (valid value message)
00001048  103C 000E                 42          MOVE.B  #14,D0  ; moves 14 iunto D0 
0000104C  4E4F                      43          TRAP    #15     ; runs the I/O command with code #14(print text)
0000104E  60B0                      44          BRA     LOOP    ; go to the start of the loop
00001050                            45  
00001050                            46  
00001050  103C 0009                 47  DONE    MOVE.B  #9,D0   ; moves 9 into D0
00001054  4E4F                      48          TRAP    #15     ; runs the I/O command with code #9(halt program)
00001056                            49          
00001056                            50  *-------Constants-------------
00001056= 45 6E 74 65 72 20 ...     51  MESSAGE DC.B    'Enter a number between 20 and 25, or enter my SID to exit: ',0
00001092= 48 6F 6F 72 61 79 ...     52  VLD     DC.B    'Hooray! You can follow instructions!',CR,LF,0
000010B9= 54 68 61 74 20 69 ...     53  INV     DC.B    'That is not between 20 and 25. Please try again.',CR,LF,0
000010EC                            54  
000010EC                            55          END     START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
DONE                1050
INV                 10B9
INVALID             1034
LF                  A
LOOP                1000
MESSAGE             1056
SID                 1988F2
START               1000
VALID               1042
VLD                 1092
